'use client';

import { useDisclosure } from '@chakra-ui/react';

import Link from 'next/link';

import {
	MotionConfig,
	motion,
	useMotionValueEvent,
	useScroll,
} from 'framer-motion';
import { animate, stagger } from 'framer-motion/dom';
import { IoIosSearch } from 'react-icons/io';
import { useCycle } from 'framer-motion';
import { createContext, useContext, useEffect, useState } from 'react';

import useMousePosition from '@/hooks/use-mousepoition';
import { getColors } from '@/hooks/use-color';
import { useWindowSize } from '@uidotdev/usehooks';

import Image from 'next/image';

import { basePath } from '@/hooks/use-basepath';

import { MenuContext, ThemeContext } from '@/pages/_app';
import { PiCaretDown } from 'react-icons/pi';
import Head from 'next/head';
import Fade from '@/components/Layout/Fade';

import {
	Modal,
	ModalOverlay,
	ModalContent,
	ModalHeader,
	ModalFooter,
	ModalBody,
	ModalCloseButton,
} from '@chakra-ui/react';
import { Button, ButtonGroup } from '@chakra-ui/react';
// import Button from '@/components/button/button';

export default function Nav({}) {
	const { isOpen, onOpen, onClose } = useDisclosure();
	return (
		<>
			<Head>
				<title>San Miguel Corporation</title>
				<meta name='description' content='Generated by create next app' />
				<meta
					name='viewport'
					content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'
				/>
				<meta
					http-equiv='Content-Security-Policy'
					content='frame-src youtube.com www.youtube.com'
				/>
				<link rel='icon' href={`${basePath}/favicon.ico`} />
			</Head>
			<Fade>
				<div
					style={{
						marginTop: '20rem',
					}}>
					<Button onClick={onOpen} className='btn btn-bordered'>
						Open Modal
					</Button>

					<Modal isOpen={isOpen} onClose={onClose}>
						<ModalOverlay />
						<ModalContent pb={4}>
							<ModalHeader className='heading-5'>
								Subsidiary Websites
							</ModalHeader>
							<ModalCloseButton />
							<ModalBody>
								<p>
									<a
										href='https://www.bankcom.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Bank of Commerce
									</a>
									<br />
									<a
										href='https://www.eaglecement.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Eagle Cement
									</a>
									<br />
									<a
										href='https://www.petron.com/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Petron Corp.
									</a>
									<br />
									<a
										href='https://www.ginebrasanmiguel.com/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Ginebra San Miguel
									</a>
									<br />
									<a
										href='https://www.sanmiguelproperties.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										San Miguel Properties, Inc
									</a>
									<br />
									<a
										href='https://www.sanmiguelfoods.com/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										San Miguel Foods
									</a>
									<br />
									<a
										href='https://greatfoodsolutions.com/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Great Food Solutions
									</a>
									<br />
									<a
										href='https://homefoodie.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Home Foodie
									</a>
									<br />
									<a
										href='https://magnoliachicken.com/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Magnolia Chicken
									</a>
									<br />
									<a
										href='https://www.monterey.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Monterey Foods Corp.
									</a>
									<br />
									<a
										href='https://www.ncc.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Northern Cement
									</a>
									<br />
									<a
										href='https://petrogen.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Petrogen Insurance Corporation
									</a>
									<br />
									<a
										href='https://www.sanmiguelbrewery.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										San Miguel Brewery Inc.
									</a>
									<br />
									<a
										href='https://www.smfb.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										San Miguel Food and Beverage
									</a>
									<br />
									<a
										href='https://www.facebook.com/redhorsebeer/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										Red Horse Beer
									</a>
									<br />
									<a
										href='https://www.facebook.com/sanmiguel.hk'
										target='_blank'
										without='true'
										rel='noreferrer'>
										San Miguel Brewery Hong Kong
									</a>
									<br />
									<a
										href='https://sanmiguelbrewery.com'
										target='_blank'
										without='true'
										rel='noreferrer'>
										San Miguel Brewing International Ltd.
									</a>
									<br />
									<a
										href='https://www.sanmiguelmart.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										San Miguel Mart
									</a>
									<br />
									<a
										href='https://www.facebook.com/SanMiguelPalePilsen/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										San Miguel Pale Pilsen
									</a>
									<br />
									<a
										href='https://www.facebook.com/sanmiglightph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										San Mig Light
									</a>
									<br />
									<a
										href='https://www.facebook.com/sanmiguelsuperdrybeer/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										San Miguel Super Dry
									</a>
									<br />
									<a
										href='https://smcstocktransfer.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										SMC Stock Transfer Service Corporation
									</a>
									<br />
									<a
										href='https://www.smcglobalpower.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										SMC Global Power Holdings Corp
									</a>
									<br />
									<a
										href='https://www.sltc.com.ph/'
										target='_blank'
										without='true'
										rel='noreferrer'>
										South Luzon Tollway Corporation
									</a>
									<br />
								</p>
							</ModalBody>

							{/* <ModalFooter>
								<Button colorScheme='blue' mr={3} onClick={onClose}>
									Close
								</Button>
								<Button variant='ghost'>Secondary Action</Button>
							</ModalFooter> */}
						</ModalContent>
					</Modal>
				</div>
			</Fade>
		</>
	);
}

function MainNav({
	c,
	color = '',
	defaultOpen = 'true',
	animation = false,
	toggle,
}) {
	const menu = useContext(MenuContext);

	return (
		<nav className={`test-main-nav ${c && c}`}>
			{menu.length !== 0 &&
				menu.map((item_lvl1, index) => {
					let key = `menuItem_lvl1_${item_lvl1.id}`;

					let link = item_lvl1.page.length
						? `/${item_lvl1.page[0].slug}`
						: `${item_lvl1.url}`;
					let parent_slug = link;

					if (item_lvl1.children.length)
						return (
							<NavItem key={key} label={item_lvl1.title} link={link}>
								<motion.div className='nav-dropdown'>
									{item_lvl1.children.map((item) => {
										let key = `menuItem_lvl2_${item.id}`;
										let link = parent_slug;
										link = item.page.length
											? (link += `/${item.page[0].slug}`)
											: `${item.url}`;

										// let defaultheight = height;
										return (
											<motion.div key={key} className='nav-dropdown-item'>
												<motion.div>
													<Link href={link}>
														<b>{item.title}</b>
														{item.children.length !== 0 && <PiCaretDown />}
													</Link>
												</motion.div>

												{item.children.length !== 0 && (
													<motion.div className={`inner-dropdown`}>
														{item.children.map((item) => {
															let key = `menuItem_lvl3_${item.id}`;
															let link = parent_slug;
															link = item.page.length
																? (link += `/${item.page[0].slug}`)
																: `${item.url}`;

															if (item.children.length === 0) {
																return (
																	<motion.div key={key}>
																		<Link href={link}>{item.title}</Link>
																	</motion.div>
																);
															} else {
																return (
																	<div key={key}>
																		<motion.div>
																			<Link href={link}>{item.title}</Link>
																		</motion.div>

																		<ul className='inner-dropdown'>
																			{item.children.map((item) => {
																				let key = `menuItem_lvl4_${item.id}`;
																				let link = parent_slug;
																				link = item.page.length
																					? (link += `/${item.page[0].slug}`)
																					: `${item.url}`;

																				return (
																					<motion.li key={key}>
																						<Link href={link}>
																							{item.title}
																						</Link>
																					</motion.li>
																				);
																			})}
																		</ul>
																	</div>
																);
															}
														})}
													</motion.div>
												)}
											</motion.div>
										);
									})}
								</motion.div>
							</NavItem>
						);
					else {
						return (
							<Link key={key} className='nav-item' href={link}>
								<motion.span>{item_lvl1.title}</motion.span>
							</Link>
						);
					}
				})}
		</nav>
	);
}

function NavItem({ children, label, link, navItem_, animation, toggle }) {
	const [isOpen, toggleOpen] = useCycle(false, true);

	const hover_animation1 = {
		open: {
			scale: 2,
		},
		closed: {
			scale: 1,
		},
	};
	const hover = (elem) => {
		toggleOpen();
	};

	return (
		<motion.div className='nav-item'>
			<motion.div style={{}}>
				<Link href={link}>{label}</Link>
			</motion.div>
			{children}
		</motion.div>
	);
}

function FloatingNav({ navOpen, isOpen, toggle }) {
	const theme = useContext(ThemeContext);

	return (
		<motion.div className={`test-nav-nav-toggle ${theme}`} initial='initial'>
			<FloatingNavContent />
		</motion.div>
	);
}

function FloatingNavContent({ isOpen, toggle }) {
	const { red } = getColors;
	const windowDimensions = useWindowSize();
	const { x: mouseX, y: mouseY } = useMousePosition();

	useEffect(() => {
		if (isOpen) document.querySelector('body').style.overflow = 'hidden';
		else document.querySelector('body').style.overflow = 'auto';
	}, [isOpen]);

	return (
		<motion.div
			className='test-nav-toggle-content'
			initial='initial'
			animate={isOpen ? 'open' : 'initial'}
			style={
				{
					// overflow: isOpen ? 'auto' : 'hidden',
					// pointerEvents: isOpen ? 'all' : 'none',
				}
			}>
			<MainNav
				c={'toggle-nav'}
				defaultOpen={false}
				animation={true}
				toggle={toggle}
			/>
		</motion.div>
	);
}
